""" Copyright (c) 2020, Daniela Szwarcman and IBM Research
    * Licensed under The MIT License [see LICENSE for details]

    - Retrain CNN model generated by Q-NAS.
"""

import argparse
import os

import matplotlib.pyplot as plt
import numpy as np
from cnn.input import Dataloader, Dataset, get_validation_augmentation


def main(**args):

    patch_size = (args['image_size'], args['image_size'], args['num_channels'])
    val_augmentation = get_validation_augmentation(patch_size)
    
    val_dataset = Dataset(
        data_path=os.path.join(args['data_path'], 'train'),
        selected=None,
        only_non_empty_slices=True,
    )
    
    val_dataloader = Dataloader(
        dataset=val_dataset,
        augmentation=val_augmentation,
        shuffle=True,
    )

    for image, _ in val_dataloader:
        for i in range(args['num_channels']):
            channel = image[0][:, : , i]
            plt.figure(figsize=(10, 5))
            plt.imshow(channel, cmap='gray') 
            plt.title('Image channel ' + str(i))
            plt.axis('off')
                
        plt.tight_layout()
        plt.show()


if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "--data_path", type=str, required=True, help="Path to experiment_path."
    )

    parser.add_argument(
        "--image_size", type=int, required=True, help="Size of the image."
    )

    parser.add_argument(
        "--num_channels", type=int, required=True, help="Channels of the image."
    )

    arguments = parser.parse_args()

    main(**vars(arguments))